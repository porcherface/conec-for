GAME INTERFACE V 0.0.1

The Game Contract will expose the following variables and functions

- player1 (address): address of player 1 
- player2 (address): address of player 2 - the two players will be always called player 0 and 1 from now on
- winner  (uint8)  : 0 if game in progress, 1 if player0 wins, 2 if player2 wins, 3 if draw
- move    (bool)   : the player who must make the next move, false for player0, true for player1


- makeMove(uint8 column) [onlyMover] returns (bool) returns 0 if the move is registered, 1 otherwise
- getBoard()             [onlyPlayer]returns (uint256) returns the board as a single uint256 number
- resign()               [onlyPlayer]returns (bool) resigns the game (NOT IMPLEMENTED)
- claim()				 [onlyPlayer] after 24h you can claim a win	(NOT IMPLEMENTED)

game also has a receive() and a fallback() function.

if you are not familiar with custom transactions and custom calls in eth you can simply send 0ETH with a custom data attached.
the custom data must contain only one number (0-9) and will be interpreted as makeMove(number)



details on how to read the board from getBoard() will follow in this document

The game contract will also provide a game history in the event log using the following events: 
- gameStarted(address game_address, address player0, address player1)
- moveLogged(address player, uint8 move_number, uint8 move)
- gameOver(address game_address, address winner, uint256 prize)
